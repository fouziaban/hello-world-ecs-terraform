name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.7

    - name: Initialize Terraform in remote_state
      working-directory: infra/accounts/dev/remote_state
      run: terraform init

    - name: Apply Terraform in remote_state
      working-directory: infra/accounts/dev/remote_state
      run: terraform apply

    - name: Initialize Terraform in ecs
      working-directory: infra/accounts/dev/ecs
      run: terraform init

    - name: Apply Terraform in ecs
      working-directory: infra/accounts/dev/ecs
      run: terraform apply

    - name: Build Docker image
      run: docker build -t ${{ secrets.ECR_REPOSITORY_URL }}:${{ secrets.TF_VAR_release_version }} .

    - name: Login into ECR repo
      run: docker login --username AWS -p $(aws ecr get-login-password --region ${{ secrets.AWS_REGION }}) ${{ secrets.ECR_REPOSITORY_URL }}

    - name: Push Docker image to Amazon ECR
      run: docker push ${{ secrets.ECR_REPOSITORY_URL }}:${{ secrets.TF_VAR_release_version }}

    - name: Apply Terraform configuration
      working-directory: infra/accounts/dev/ecs
      run: terraform apply -auto-approve -var="release_version=${{ secrets.TF_VAR_release_version }}"
